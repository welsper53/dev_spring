<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo">
	<select id="qnaList" parameterType="java.util.HashMap" resultType="map">
		SELECT
		        q.qna_bno, q.qna_title, q.qna_content
		       ,q.qna_type, q.qna_hit, q.qna_date, q.qna_secret
		       ,m.mem_name, m.mem_no
		  FROM qna q, member230324 m
		WHERE q.mem_no = m.mem_no
		<!-- KhMyFilter 조건검색 시 사용 -->
		<if test='qna_type!=null and qna_type.equals("전체")'>
		 	AND 1 = 1
		</if>
		<if test='qna_type!=null and qna_type.equals("양도")'>
		 	AND q.qna_type = #{qna_type}
		</if>
		<if test='qna_type!=null and qna_type.equals("수업")'>
		 	AND q.qna_type = #{qna_type}
		</if>
		<!-- 회원고유번호별 조건검색 시 사용 -->
		<if test='mem_no != null'>
			AND m.mem_no = #{mem_no}
		</if>
		<!-- 글번호 조건검색 시 사용 -->
		<if test='qna_bno != null'>
			AND q.qna_bno = #{qna_bno}
		</if>
		<if test='content != null'>
			<choose>
				<when test='condition!=null and condition.equals("제목")'>
					AND q.qna_title LIKE '%'||#{content}||'%'
				</when>
				<when test='condition!=null and condition.equals("내용")'>
					AND q.qna_content LIKE '%'||#{content}||'%'
				</when>
				<when test='condition!=null and condition.equals("작성자")'>
					AND m.mem_name LIKE '%'||#{content}||'%'
				</when>
			</choose>
		</if>
		ORDER BY q.qna_bno desc
	</select>

	<select id="qnaDetail" parameterType="java.util.HashMap" resultType="map">
		SELECT
			q.qna_bno, q.qna_title, q.qna_content
			, q.qna_type, q.qna_hit, q.qna_date, q.qna_secret
			, m.mem_name, m.mem_no, c.comm_no
		FROM qna q, member230324 m
		   , ( SELECT count(comm_no) comm_no, qna_bno FROM qna_comment
			  	GROUP BY qna_bno
			 ) c
		WHERE q.mem_no = m.mem_no
		  AND q.qna_bno = c.qna_bno(+)
		<!-- 회원고유번호별 조건검색 시 사용 -->
		<if test='mem_no != null'>
			AND m.mem_no = #{mem_no}
		</if>
		<!-- 글번호 조건검색 시 사용 -->
		<if test='qna_bno != null'>
		<!-- setNull(1, 1111)에러 타입, 부적합한 열유형
			Integer.parseInt()
		-->
			AND q.qna_bno = #{qna_bno}
		</if>
	</select>
<!--
@RequestParam - Map타입이 올 수있다 - GET방식 요청 - 요청 header담김 - 인터셉트 - 캐시에 있는 정보가 다시 출력될수 있다.
:문제점: 노출 -URL - 보안취약 - 조회
@RequestBody - POST방식 요청 - 단위테스트 불가함 -그러니까 postman 테스트 가능함 - 요청 body담김 - 인터셉트 불가함 - 무조건 서버로 전달
:VO Map 원시형 타입 모두 가능함

질문해보기
mem_no(member230324테이블)는 어디서 가져오나요? - 인증을 어디서 하나요? - App.jsx의 useEffect가
qna_type 즉 질문타입은 상수로 양도를 줌
qna_secret 에는 비번을 입력 받음
비번이 널이면 공개 널이 아니면 비공개 처리 가능한가?
생각해볼 문제
화면에서 가져올 컬럼의 종류는 몇가지 인가요?

세션이나 쿠키에서 또는 세션스토리지에서 가져와야 하는 컬럼이 있을까요?
상수로 넣을 수 있는 (또는 넣어야 하는) 컬럼이 존재하나요?
만일 존재한다면 어떤 컬럼인지 말해 보세요
하나 더
작성자는 입력 받도록 화면을 그려야 할까요?
아님 자동으로 결정할 수 있는 건가요?
 -->
	<insert id="qnaInsert" parameterType="map" useGeneratedKeys="true" keyColumn="qna_bno" keyProperty="qna_bno">
		INSERT INTO qna(qna_bno, mem_no, qna_title
		              , qna_content, qna_type, qna_secret
		              , qna_hit, qna_date)
		         VALUES(qna_seq.nextval,#{mem_no},#{qna_title}
		               ,#{qna_content}, #{qna_type}, #{qna_secret}
		               , 0, to_char(sysdate,'YYYY-MM-DD'))
	</insert>



	<update id="qnaUpdate" parameterType="map">
		UPDATE qna
			SET
		    <if test="qna_title != null || qna_title.length > 0">
				qna_title = #{qna_title},
			</if>
		    <if test="qna_content != null || qna_content.length > 0">
				qna_content = #{qna_content},
			</if>
		    <if test="qna_type != null || qna_type.length > 0">
				qna_type = #{qna_type},
			</if>
		    <if test="qna_secret != null || qna_secret.length > 0">
				qna_secret = #{qna_secret},
			</if>
		    	qna_update = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI":SS')
		WHERE qna_bno = #{qna_bno}
	</update>

	<!--
		화면에서 숫자 타입 받아올 때 형전환 처리 할 것
		안하면 부적합한 열유형 관련 에러 메시지 발생하니 주의할 것!!
	-->
	<delete id="qnaDelete" parameterType="map">
		DELETE FROM qna WHERE qna_bno = #{qna_bno}
	</delete>

	<!--
		이 쿼리문은 언제 어디서 왜 호출되야 할까요?
		Controller Logic Dao 다 필요한 경우가 있고 - 글쓰기
		Controller Logic까지만 필요한 경우가 있고 - imageUpload
		Dao 만 필요한 경우가 있다 - 조회수 증가 하기가 여기에 해당된다
		위치
		언제 조회수 증가 함수를 호출하면 될까요?
		- 아 그래서 qnaList와 qnaDetail 나누기 잘 했네
	-->
	<update id="qnaHit" parameterType="map">
		<choose>
			<when test='id.equals("qna")'>
				UPDATE qna SET qna_hit = qna_hit + 1
				WHERE qna_bno = #{qna_bno}
			</when>
			<when test='id.equals("notice")'>
				UPDATE notice SET not_hit = not_hit + 1
				WHERE not_bno = #{not_bno}
			</when>
		</choose>
	</update>


<!--==================================================================================-->

	<!-- 첨부파일 -->

	<select id="fileList" parameterType="map" resultType="map">
		SELECT file_name, file_size
		FROM mblog_file
		WHERE qna_bno = #{qna_bno}
	</select>

	<insert id="fileInsert" parameterType="map">
		INSERT INTO mblog_file (file_no, file_path, file_name, file_size)
		VALUES (mblog_file_seq.nextval, #{file_path}, #{file_name}, #{file_size})
	</insert>

	<update id="fileUpdate" parameterType="list">
		<!--
			여러 컬럼을 UPDATE 시 'foreach' 태그를 사용한다
			collection:
			item:
			separator:
			open:
			close:
		-->
		<foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE mblog_file
			SET board_type = 'qna'
			, qna_bno = #{item.qna_bno}
			WHERE file_name = LTRIM(#{item.file_name})
		</foreach>
	</update>

	<delete id="fileDelete" parameterType="map">
		DELETE FROM mblog_file WHERE qna_bno = #{qna_bno}
	</delete>

	<!--==================================================================================-->
</mapper>